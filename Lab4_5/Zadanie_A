// Zadanie 1
function czyTrojkaPitagorejska() {
    console.clear();
    var a = parseFloat(prompt('Podaj długość boku a:'));
    var b = parseFloat(prompt('Podaj długość boku b:'));
    var c = parseFloat(prompt('Podaj długość boku c:'));

    var liczby = [a, b, c].sort(function (x, y) {
        return x - y;
    });

    if (liczby[0] ** 2 + liczby[1] ** 2 === liczby[2] ** 2) {
        console.log('To jest trójka pitagorejska!');
    } else {
        console.log('To nie jest trójka pitagorejska.');
    }
}

// Zadanie 2
function liczbyPodzielne() {
    console.clear();
    var a = parseInt(prompt('Podaj początek przedziału:'));
    var b = parseInt(prompt('Podaj koniec przedziału:'));
    var c = parseInt(prompt('Podaj liczbę, przez którą mają być podzielne:'));

    for (var i = a; i <= b; i++) {
        if (i % c === 0) {
            console.log(i);
        }
    }
}

// Zadanie 3
function tabliczkaMnozenia() {
    console.clear();
    var bok = parseInt(prompt('Podaj bok tabliczki mnożenia:'));

    for (var i = 1; i <= bok; i++) {
        var row = '';
        for (var j = 1; j <= bok; j++) {
            row += (i * j) + ' ';
        }
        console.log(row);
    }
}

// Zadanie 4
function ciagFibonacciego() {
    console.clear();
    var dlugosc = parseInt(prompt('Podaj długość ciągu Fibonacciego:'));

    var fib = [0, 1];
    for (var i = 2; i < dlugosc; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }
    console.log(fib.join(', '));
}

// Zadanie 5
function rysujChoinke() {
    console.clear();
    var wysokosc = parseInt(prompt('Podaj wysokość choinki:'));

    for (var i = 1; i <= wysokosc; i++) {
        var row = '';
        for (var j = 1; j <= i; j++) {
            row += '*';
        }
        console.log(row);
    }
}

// Zadanie 6
function rysujChoinkaNoca() {
    console.clear();
    var wysokosc = parseInt(prompt('Podaj wysokość choinki nocą:'));
    
    for (var i = wysokosc; i >= 1; i--) {
        var row = '';
        for (var j = 1; j <= i; j++) {
            row += '*';
        }
        for (var k = 1; k <= (wysokosc - i) * 2; k++) {
            row += ' ';
        }
        for (var l = 1; l <= i; l++) {
            row += '*';
        }
        console.log(row);
    }
    var ostatniRzad = '*'.repeat(wysokosc * 2);
    console.log(ostatniRzad);
}


// Zadanie 7
function poleFigury() {
    console.clear();
    var ksztalt = prompt('Podaj kształt figury (prostokat, trapez, rownoleglobok, trojkat):');
    var wymiaryStr = prompt('Podaj wymiary figury oddzielone przecinkiem:');
    var wymiary = wymiaryStr.split(',').map(Number);

    switch (ksztalt) {
        case 'prostokat':
            console.log('Pole prostokąta: ' + wymiary[0] * wymiary[1]);
            break;
        case 'trapez':
            console.log('Pole trapezu: ' + (wymiary[0] + wymiary[1]) * wymiary[2] / 2);
            break;
        case 'rownoleglobok':
            console.log('Pole równoległoboku: ' + wymiary[0] * wymiary[1]);
            break;
        case 'trojkat':
            console.log('Pole trójkąta: ' + wymiary[0] * wymiary[1] / 2);
            break;
        default:
            console.log('Nieznany kształt');
    }
}

// Zadanie 8
function poleFiguryCallback() {
    console.clear();
    var ksztalt = prompt('Podaj kształt figury (prostokat, trapez, rownoleglobok, trojkat):');
    var wymiaryStr = prompt('Podaj wymiary figury oddzielone przecinkiem:');
    var wymiary = wymiaryStr.split(',').map(Number);

    var obliczPole = function (ksztalt, wymiary) {
        var pola = {
            prostokat: function (wymiary) {
                return wymiary[0] * wymiary[1];
            },
            trapez: function (wymiary) {
                return (wymiary[0] + wymiary[1]) * wymiary[2] / 2;
            },
            rownoleglobok: function (wymiary) {
                return wymiary[0] * wymiary[1];
            },
            trojkat: function (wymiary) {
                return wymiary[0] * wymiary[1] / 2;
            }
        };

        return pola[ksztalt](wymiary);
    };

    console.log('Pole figury: ' + obliczPole(ksztalt, wymiary));
}

// Zadanie 9
function trojkatPascala() {
    console.clear();
    var wysokosc = parseInt(prompt('Podaj wysokość trójkąta Pascala:'));

    var trojkat = [];
    for (var i = 0; i < wysokosc; i++) {
        trojkat[i] = [];
        for (var j = 0; j <= i; j++) {
            if (j === 0 || j === i) {
                trojkat[i][j] = 1;
            } else {
                trojkat[i][j] = trojkat[i - 1][j - 1] + trojkat[i - 1][j];
            }
        }
    }
    console.log(trojkat.map(row => row.join(' ')).join('\n'));
}

// Zadanie 10
function cenzura(niedozwolone, zdanie) {
    niedozwolone.forEach(function (slowo) {
        var regex = new RegExp('\\b' + slowo.replace(/,/g, '') + '\\b', 'gi');
        var match;
        while ((match = regex.exec(zdanie)) !== null) {
            zdanie = zdanie.substring(0, match.index) + '*'.repeat(match[0].length) + zdanie.substring(match.index + match[0].length);
            regex.lastIndex = match.index + 1; // Przesuwamy lastIndex, aby uniknąć nieskończonej pętli
        }
    });
    console.log(zdanie);
}

function uruchomCenzure() {
    var niedozwoloneSlowa = prompt('Podaj niedozwolone słowa oddzielone przecinkiem:').split(',').map(word => word.trim());
    var zdanieDoCenzury = prompt('Podaj zdanie do ocenzurowania:');
    cenzura(niedozwoloneSlowa, zdanieDoCenzury);
}
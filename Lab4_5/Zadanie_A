// Zadanie 1
function czyTrojkaPitagorejska(a, b, c) {
    console.log("Zadanie 1");

    var liczby = [a, b, c].sort(function (x, y) {
        return x - y;
    });

    if (liczby[0] ** 2 + liczby[1] ** 2 === liczby[2] ** 2) {
        console.log('To jest trójka pitagorejska!');
    } else {
        console.log('To nie jest trójka pitagorejska.');
    }
}

// Zadanie 2
function liczbyPodzielne(a, b, c) {
    console.log("Zadanie 2");

    for (var i = a; i <= b; i++) {
        if (i % c === 0) {
            console.log(i);
        }
    }
}

// Zadanie 3
function tabliczkaMnozenia(bok) {
    console.log("Zadanie 3");

    for (var i = 1; i <= bok; i++) {
        var row = '';
        for (var j = 1; j <= bok; j++) {
            row += (i * j) + ' ';
        }
        console.log(row);
    }
}

// Zadanie 4
function ciagFibonacciego(dlugosc) {
    console.log("Zadanie 4");

    var fib = [0, 1];
    for (var i = 2; i < dlugosc; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }
    console.log(fib.join(', '));
}

// Zadanie 5
function rysujChoinke(wysokosc) {
    console.log("Zadanie 5");

    for (var i = 1; i <= wysokosc; i++) {
        var row = '';
        for (var j = 1; j <= i; j++) {
            row += '*';
        }
        console.log(row);
    }
}

// Zadanie 6
function rysujChoinkaNoca(wysokosc) {
    console.log("Zadanie 6");

    for (var i = wysokosc; i >= 1; i--) {
        var row = '';
        for (var j = 1; j <= i; j++) {
            row += '*';
        }
        for (var k = 1; k <= (wysokosc - i) * 2; k++) {
            row += ' ';
        }
        for (var l = 1; l <= i; l++) {
            row += '*';
        }
        console.log(row);
    }
    var ostatniRzad = '*'.repeat(wysokosc * 2);
    console.log(ostatniRzad);
}

// Zadanie 7
function poleFigury(ksztalt, wymiary) {
    console.log("Zadanie 7");
    switch (ksztalt) {
        case 'prostokat':
            console.log('Pole prostokąta: ' + wymiary[0] * wymiary[1]);
            break;
        case 'trapez':
            console.log('Pole trapezu: ' + (wymiary[0] + wymiary[1]) * wymiary[2] / 2);
            break;
        case 'rownoleglobok':
            console.log('Pole równoległoboku: ' + wymiary[0] * wymiary[1]);
            break;
        case 'trojkat':
            console.log('Pole trójkąta: ' + wymiary[0] * wymiary[1] / 2);
            break;
        default:
            console.log('Nieznany kształt');
    }
}

// Zadanie 8
function poleFiguryCallback(ksztalt, wymiary) {
    console.log("Zadanie 8");
    var obliczPole = function (ksztalt, wymiary) {
        var pola = {
            prostokat: function (wymiary) {
                return wymiary[0] * wymiary[1];
            },
            trapez: function (wymiary) {
                return (wymiary[0] + wymiary[1]) * wymiary[2] / 2;
            },
            rownoleglobok: function (wymiary) {
                return wymiary[0] * wymiary[1];
            },
            trojkat: function (wymiary) {
                return wymiary[0] * wymiary[1] / 2;
            }
        };

        return pola[ksztalt](wymiary);
    };
    console.log('Pole figury: ' + obliczPole(ksztalt, wymiary));
}

// Zadanie 9
function trojkatPascala(wysokosc) {
    console.log("Zadanie 9");
    var trojkat = [];
    for (var i = 0; i < wysokosc; i++) {
        trojkat[i] = [];
        for (var j = 0; j <= i; j++) {
            if (j === 0 || j === i) {
                trojkat[i][j] = 1;
            } else {
                trojkat[i][j] = trojkat[i - 1][j - 1] + trojkat[i - 1][j];
            }
        }
    }
    console.log(trojkat.map(row => row.join(' ')).join('\n'));
}

// Zadanie 10
function cenzura(niedozwolone, zdanie) {
    const slowa = zdanie.split(' ');

    for (let i = 0; i < slowa.length; i++) {
        for (let j = 0; j < niedozwolone.length; j++) {
            const slowo = niedozwolone[j].toLowerCase();

            if (slowa[i].toLowerCase().includes(slowo)) {
                slowa[i] = slowa[i].replace(new RegExp(slowo, 'gi'), '*'.repeat(slowo.length));
            }
        }
    }

    const wynik = slowa.join(' ');
    console.log(wynik);
}